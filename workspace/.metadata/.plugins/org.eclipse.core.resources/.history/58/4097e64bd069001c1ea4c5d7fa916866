#include <assert.h>
#include <inttypes.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#include "io.h"
#include "system.h"

#include "memory_access.h"

int read_memory(void) {
    uint32_t megabyte_count = 0;

    char* filename = "/mnt/host/image.ppm";

    FILE *foutput = fopen(filename, "w");
    if (!foutput) {
     printf("Error: could not open \"%s\" for writing\n", filename);
     return false;
    }

    for (uint32_t i = 0; i < HPS_0_BRIDGES_SPAN; i += sizeof(uint32_t)) {

        // Print progress through 256 MB memory available through address span expander
        if ((i % ONE_MB) == 0) {
            printf("megabyte_count = %" PRIu32 "\n", megabyte_count);
            megabyte_count++;
        }

        uint32_t addr = HPS_0_BRIDGES_BASE + i;

        // Read through address span expander
        uint32_t readdata = IORD_32DIRECT(addr, 0);

        /* Use fprintf function to write to file through file pointer */
        fprintf(foutput,"%" PRIu32 "\n", readdata);

    }

    return EXIT_SUCCESS;
}
